settings = {
  core = { real_name = "Niko"; user_name = "amok"; nick = "amokleben"; };
  "fe-text" = { actlist_sort = "refnum"; };
};

servers = (
  {
    address = "irc.freenode.org";
    chatnet = "FreeNode";
    autoconnect = "yes";
    use_ssl = "yes";
  },
  {
    address = "irc.penguinfriends.org";
    chatnet = "PenguinFriends";
    autoconnect = "no";
    port = "6670";
    use_ssl = "yes";
  },
  {
    address = "irc.hackint.eu";
    chatnet = "hackint";
    autoconnect = "yes";
  },
  {
    address = "irc.de.euirc.net";
    chatnet = "euIRC";
    autoconnect = "no";
  },
)

    chatnets = {
      FreeNode = { type = "IRC"; };
      PenguinFriends = { type = "IRC"; };
      hackint = { type = "IRC"; };
      euIRC = { type = "IRC"; };
    };

    channels = (
      { name = "#p0rntrip"; chatnet = "FreeNode"; autojoin = "Yes"; },
      { name = "#BlackBoard"; chatnet = "FreeNode"; autojoin = "Yes"; },
      { name = "#python.de"; chatnet = "FreeNode"; autojoin = "Yes"; },
      { name = "#herbstluftwm"; chatnet = "FreeNode"; autojoin = "No"; },
      { name = "#pyugrm"; chatnet = "FreeNode"; autojoin = "Yes"; },
      { name="#crunchbang"; chatnet="FreeNode"; autojoin="Yes"; },
      { name="#nikola"; chatnet="FreeNode"; autojoin="Yes"; },
	{ name="#duangle"; chatnet="FreeNode"; autojoin="Yes"; },

      { name = "#PenguinFriends"; chatnet = "PenguinFriends"; autojoin = "no"; },
      { name = "#nik0"; chatnet = "PenguinFriends"; autojoin = "no"; },

      { name = "#ccc-ffm"; chatnet = "hackint"; autojoin = "yes"; },
      { name = "#chaos-darmstadt"; chatnet = "hackint"; autojoin = "yes"; },

      { name = "#euirc.radio"; chatnet = "euIRC"; autojoin = "yes"; }
    );

    aliases = {
      J = "join";
      WJOIN = "join -window";
      WQUERY = "query -window";
      LEAVE = "part";
      BYE = "quit";
      EXIT = "quit";
      SIGNOFF = "quit";
      DESCRIBE = "action";
      DATE = "time";
      HOST = "userhost";
      LAST = "lastlog";
      SAY = "msg *";
      WI = "whois";
      WII = "whois $0 $0";
      WW = "whowas";
      W = "who";
      N = "names";
      M = "msg";
      T = "topic";
      C = "clear";
      CL = "clear";
      K = "kick";
      KB = "kickban";
      KN = "knockout";
      BANS = "ban";
      B = "ban";
      MUB = "unban *";
      UB = "unban";
      IG = "ignore";
      UNIG = "unignore";
      SB = "scrollback";
      UMODE = "mode $N";
      WC = "window close";
      WN = "window new hide";
      SV = "say Irssi $J ($V) - http://irssi.org/";
      GOTO = "sb goto";
      CHAT = "dcc chat";
      RUN = "SCRIPT LOAD";
      CALC = "exec - if command -v bc >/dev/null 2>&1\\; then printf '%s=' '$*'\\; echo '$*' | bc -l\\; else echo bc was not found\\; fi";
      SBAR = "STATUSBAR";
      INVITELIST = "mode $C +I";
      Q = "QUERY";
      "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
      EXEMPTLIST = "mode $C +e";
      ATAG = "WINDOW SERVER";
      UNSET = "set -clear";
      RESET = "set -default";
    };

    statusbar = {
      # formats:
      # when using {templates}, the template is shown only if it's argument isn't
      # empty unless no argument is given. for example {sb} is printed always,
      # but {sb $T} is printed only if $T isn't empty.

      items = {
        # start/end text in statusbars
        barstart = "{sbstart}";
        barend = "{sbend}";

        topicbarstart = "{topicsbstart}";
        topicbarend = "{topicsbend}";

        # treated "normally", you could change the time/user name to whatever
        time = "{sb $Z}";
        user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

        # treated specially .. window is printed with non-empty windows,
        # window_empty is printed with empty windows
        window = "{sb $winref:$tag/$itemname{sbmode $M}}";
        window_empty = "{sb $winref{sbservertag $tag}}";
        prompt = "{prompt $[.15]itemname}";
        prompt_empty = "{prompt $winname}";
        topic = " $topic";
        topic_empty = " Irssi v$J - http://www.irssi.org";

        # all of these treated specially, they're only displayed when needed
        lag = "{sb Lag: $0-}";
        act = "{sb Act: $0-}";
        more = "-- more --";
      };

      # there's two type of statusbars. root statusbars are either at the top
      # of the screen or at the bottom of the screen. window statusbars are at
      # the top/bottom of each split window in screen.
      default = {
        # the "default statusbar" to be displayed at the bottom of the window.
        # contains all the normal items.
        window = {
          disabled = "no";

          # window, root
          type = "window";
          # top, bottom
          placement = "bottom";
          # number
          position = "1";
          # active, inactive, always
          visible = "active";

          # list of items in statusbar in the display order
          items = {
            barstart = { priority = "100"; };
            time = { };
            user = { };
            window = { };
            window_empty = { };
            lag = { priority = "-1"; };
            act = { priority = "10"; };
            more = { priority = "-1"; alignment = "right"; };
            barend = { priority = "100"; alignment = "right"; };
          };
        };

        # statusbar to use in inactive split windows
        window_inact = {
          type = "window";
          placement = "bottom";
          position = "1";
          visible = "inactive";
          items = {
            barstart = { priority = "100"; };
            window = { };
            window_empty = { };
            more = { priority = "-1"; alignment = "right"; };
            barend = { priority = "100"; alignment = "right"; };
          };
        };

        # we treat input line as yet another statusbar :) It's possible to
        # add other items before or after the input line item.
        prompt = {
          type = "root";
          placement = "bottom";
          # we want to be at the bottom always
          position = "100";
          visible = "always";
          items = {
            prompt = { priority = "-1"; };
            prompt_empty = { priority = "-1"; };
            # treated specially, this is the real input line.
            input = { priority = "10"; };
          };
        };

        # topicbar
        topic = {
          type = "root";
          placement = "top";
          position = "1";
          visible = "always";
          items = {
            topicbarstart = { priority = "100"; };
            topic = { };
            topic_empty = { };
            topicbarend = { priority = "100"; alignment = "right"; };
          };
        };
      };
    };
  };
);
chatnets = {
  FreeNode = { type = "IRC"; };
  PenguinFriends = { type = "IRC"; };
  hackint = { type = "IRC"; };
  euIRC = { type = "IRC"; };
};
logs = {
  "\003/quit" = { 
    level = "ALL";
    items = ( { type = "window"; name = "1"; } );
  };
};
